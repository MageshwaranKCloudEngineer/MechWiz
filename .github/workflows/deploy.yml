name: Smart Warranty CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  GIT_URL: "https://github.com/MageshwaranKCloudEngineer/Smart_warranty_project"
  DOCKER_IMAGE: "magesh506/smart_warrenty_calculator"
  IMAGE_TAG: "latest"
  AWS_REGION: "us-east-1"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Change to self-hosted if using EC2

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t $DOCKER_IMAGE:$IMAGE_TAG .
          docker push $DOCKER_IMAGE:$IMAGE_TAG

      - name: Remove Old Docker Images
        run: |
          docker stop smart-warranty-calculator || true
          docker rm -f smart-warranty-calculator || true
          docker rmi -f $DOCKER_IMAGE:$IMAGE_TAG || true

      - name: Install Kubectl
        run: |
          if ! command -v kubectl &> /dev/null; then
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          fi
          kubectl version --client

      - name: Configure AWS CLI for EKS (If Using AWS)
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name your-cluster-name
        continue-on-error: true

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f app.yml
        continue-on-error: true  # Ensures Docker fallback runs even if Kubernetes fails

      - name: Deploy to Docker as Fallback
        if: ${{ failure() }}
        run: |
          echo "Kubernetes deployment failed. Deploying Docker container as fallback."
          docker stop smart-warranty-calculator || true
          docker rm -f smart-warranty-calculator || true
          docker pull $DOCKER_IMAGE:$IMAGE_TAG
          docker run -d --name smart-warranty-calculator -p 5000:5000 $DOCKER_IMAGE:$IMAGE_TAG

      - name: Debug Docker Containers  # âœ… New debug step to check container status
        run: |
          echo "Checking running Docker containers..."
          docker ps -a
          echo "Fetching logs from smart-warranty-calculator..."
          docker logs smart-warranty-calculator || echo "No logs found for smart-warranty-calculator"

      - name: Logout from Docker Hub
        if: always()
        run: docker logout

      - name: Success Message
        if: success()
        run: echo "Pipeline completed successfully!"

      - name: Failure Message
        if: failure()
        run: echo "Pipeline failed."
