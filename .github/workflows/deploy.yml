name: Smart Warranty CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  GIT_URL: "https://github.com/MageshwaranKCloudEngineer/Smart_warranty_project"
  DOCKER_IMAGE: "magesh506/smart_warrenty_calculator"
  IMAGE_TAG: "latest"
  AWS_REGION: "us-east-1"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Change to self-hosted if using EC2 as a runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t $DOCKER_IMAGE:$IMAGE_TAG .
          docker push $DOCKER_IMAGE:$IMAGE_TAG

      - name: Install Docker & Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Deploy on EC2 using Docker Swarm
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "Initializing Docker Swarm if not already initialized..."
            docker swarm init --advertise-addr $(hostname -i) || true

            echo "Checking available nodes..."
            NODE_COUNT=$(docker node ls | grep -c 'Ready')
            if [[ $NODE_COUNT -lt 2 ]]; then
              echo "Error: At least 2 active nodes are required. Current active nodes: $NODE_COUNT"
              exit 1
            fi

            echo "Deploying services using Docker Swarm..."
            docker stack deploy -c docker-compose.yml smart-warranty

            echo "Verifying deployed services..."
            docker service ls
          EOF

      - name: Debug Docker Containers on EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "Checking running services..."
            docker service ls
            echo "Fetching logs from smart-warranty-calculator..."
            docker service logs smart-warranty_smart-warranty-calculator || echo "No logs found for smart-warranty-calculator"
          EOF

      - name: Logout from Docker Hub
        if: always()
        run: docker logout

      - name: Success Message
        if: success()
        run: echo "Pipeline completed successfully!"

      - name: Failure Message
        if: failure()
        run: echo "Pipeline failed."
